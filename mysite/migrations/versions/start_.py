"""empty message

Revision ID: start
Revises: 
Create Date: 2019-10-15 10:39:21.150363

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'start'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('names',
                    sa.Column('name', sa.String(length=128), nullable=False),
                    sa.Column('male_count', sa.Integer(), nullable=True),
                    sa.Column('female_count', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('name')
                    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('names')
    # ### end Alembic commands ###


def upgrade_anode():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('label_projects',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=True),
                    sa.Column('created', sa.DateTime(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=128), nullable=True),
                    sa.Column('password_hash', sa.Text(), nullable=True),
                    sa.Column('_is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('documents',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('index', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(length=128), nullable=True),
                    sa.Column('text', sa.Text(), nullable=True),
                    sa.Column('text_abridged', sa.Text(), nullable=True),
                    sa.Column('created', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['label_projects.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('labels',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=True),
                    sa.Column('created', sa.DateTime(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('_bg_color', sa.String(length=128), nullable=True),
                    sa.Column('text_color', sa.String(length=128), nullable=True),
                    sa.Column('hotkey', sa.String(length=128), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['label_projects.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tags',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_labelprojects',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['label_projects.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'project_id')
                    )
    op.create_table('documentlabels',
                    sa.Column('document_id', sa.Integer(), nullable=False),
                    sa.Column('label_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('selected', sa.Boolean(), nullable=True),
                    sa.Column('timestamp', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
                    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('document_id', 'label_id', 'user_id')
                    )
    op.create_table('tags_documents',
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.Column('document_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
                    sa.PrimaryKeyConstraint('tag_id', 'document_id')
                    )
    op.create_table('user_seen_documents',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('document_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'document_id')
                    )
    # ### end Alembic commands ###


def downgrade_anode():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_seen_documents')
    op.drop_table('tags_documents')
    op.drop_table('documentlabels')
    op.drop_table('user_labelprojects')
    op.drop_table('tags')
    op.drop_table('labels')
    op.drop_table('documents')
    op.drop_table('users')
    op.drop_table('label_projects')
    # ### end Alembic commands ###
